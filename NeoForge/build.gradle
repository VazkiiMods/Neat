plugins {
    id 'java-library'
    id 'idea'
    id 'net.neoforged.moddev' version '2.0.72'
    id 'eclipse'
}

version = "${project.mc_version}-${project.build_number}-NEOFORGE"

neoForge {
    version = project.neoforge_version
    validateAccessTransformers = true
    accessTransformers = project.files('src/main/resources/META-INF/accesstransformer.cfg')

    parchment {
        mappingsVersion = project.mapping_version
        minecraftVersion = project.mc_version
    }

    runs {
        configureEach {
            gameDirectory = project.file('../run')
            systemProperty 'forge.logging.markers', 'REGISTRIES'
            logLevel = org.slf4j.event.Level.DEBUG
        }
        client {
            client()
        }
        data {
            clientData()
        }
        server {
            server()
            programArgument '--nogui'
        }
    }

    mods {
        // define mod <-> source bindings
        // these are used to tell the game which sources are for which mod
        // mostly optional in a single mod project
        // but multi mod projects should define one per mod
        "${mod_id}" {
            sourceSet(project.sourceSets.main)
        }
    }
}

repositories {
    maven {
        url "https://cursemaven.com"
    }
}

dependencies {
    implementation "curse.maven:sodium-394468:6382663"
    implementation "curse.maven:irisshaders-455508:6213645"

    implementation project(":Xplat")
}

compileJava {
    source(project(":Xplat").sourceSets.main.allSource)
    options.compilerArgs << "-Xlint:all,-classfile,-processing,-deprecation,-serial" << "-Werror"
}

sourcesJar {
    from project(":Xplat").sourceSets.main.allJava
}

processResources {
    from project(":Xplat").sourceSets.main.resources
    inputs.property "version", project.version

    filesMatching("META-INF/neoforge.mods.toml") {
        expand "version": project.version
    }
}

jar {
     manifest {
        attributes([
            "Specification-Title": "${project.mod_id}",
            "Specification-Vendor": "vazkii",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": "${project.mod_id}",
            "Implementation-Version": "${project.version}",
            "Implementation-Vendor" :"vazkii",
        ])
    }
}

defaultTasks 'clean', 'build'
